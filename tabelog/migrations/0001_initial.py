# Generated by Django 4.2.11 on 2024-12-29 12:30

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='カテゴリ名')),
                ('created_datetime', models.DateTimeField(auto_now_add=True, verbose_name='登録日時')),
                ('updated_datetime', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
            ],
        ),
        migrations.CreateModel(
            name='Shop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='店名')),
                ('image', models.ImageField(blank=True, null=True, upload_to='', verbose_name='店舗画像')),
                ('description', models.TextField(blank=True, null=True, verbose_name='説明')),
                ('price_min', models.PositiveIntegerField(verbose_name='価格帯（下限値）')),
                ('price_max', models.PositiveIntegerField(verbose_name='価格帯（上限値）')),
                ('opening_time', models.TimeField(verbose_name='営業時間（開店）')),
                ('closing_time', models.TimeField(verbose_name='営業時間（閉店）')),
                ('postal_code', models.CharField(max_length=7, verbose_name='郵便番号')),
                ('address', models.CharField(max_length=100, verbose_name='住所')),
                ('phone', models.CharField(max_length=20, verbose_name='電話番号')),
                ('regular_holiday', models.CharField(max_length=20, verbose_name='定休日')),
                ('created_datetime', models.DateTimeField(auto_now_add=True, verbose_name='登録日時')),
                ('updated_datetime', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='tabelog.category')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='メールアドレス')),
                ('first_name', models.CharField(max_length=20, verbose_name='姓')),
                ('last_name', models.CharField(max_length=20, verbose_name='名')),
                ('is_paid', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('stripe_customer_id', models.CharField(blank=True, max_length=255, null=True)),
                ('stripe_card_id', models.CharField(blank=True, max_length=255, null=True)),
                ('stripe_subscription_id', models.CharField(blank=True, max_length=255, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
